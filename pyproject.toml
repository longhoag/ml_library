[tool.poetry]
name = "ml-library"
version = "0.2.0"
description = "A production-ready machine learning library"
authors = ["Long Hoang <longhhoang1202@gmail.com>"]
readme = "README.md"
repository = "https://github.com/longhoag/ml_library"
documentation = "https://ml-library.readthedocs.io"
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development",
    "Operating System :: OS Independent",
]
keywords = ["machine learning", "ML", "data science", "sklearn", "scikit-learn"]
packages = [{include = "ml_library", from = "src"}]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/longhoag/ml_library/issues"

[tool.poetry.dependencies]
python = ">=3.8.0"
numpy = ">=1.20.0"
pandas = ">=1.3.0"
scikit-learn = ">=1.0.0"
matplotlib = ">=3.4.0"
joblib = ">=1.0.0"
tensorflow = {version = ">=2.8.0", optional = true}
torch = {version = ">=1.10.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
pytest-cov = ">=3.0.0"
flake8 = ">=4.0.0"
black = ">=22.0.0"
isort = ">=5.10.0"
mypy = ">=0.9.0"
sphinx = ">=4.4.0"
sphinx-rtd-theme = ">=1.0.0"
twine = ">=4.0.0"
build = ">=0.10.0"
pre-commit = ">=2.17.0"

[tool.poetry.extras]
tensorflow = ["tensorflow"]
torch = ["torch"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Keep existing tool configurations
[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "--cov=ml_library --cov-report=term-missing --cov-report=xml"

[tool.coverage.run]
source = ["ml_library"]
omit = ["*/tests/*", "*/migrations/*", "*/examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
